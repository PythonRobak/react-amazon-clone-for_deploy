{"ast":null,"code":"var _jsxFileName = \"/Users/robak1337/Desktop/DEV/React/amazon-clone-backup/src/Order.js\";\nimport React from \"react\";\nimport \"./Order.css\";\nimport moment from \"moment\";\nimport CheckoutProduct from \"./CheckoutProduct\";\n\nfunction Order({\n  order\n}) {\n  var _order$data$basket;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Order\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, moment.unix(order.data.created).format(\"Do MMMM YYYY, h:mma\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, order.id)), (_order$data$basket = order.data.basket) === null || _order$data$basket === void 0 ? void 0 : _order$data$basket.map(item => /*#__PURE__*/React.createElement(CheckoutProduct, {\n    id: item.id,\n    title: item.title,\n    image: item.image,\n    price: item.price,\n    rating: item.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyFormat, {\n    renderText: value => /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }\n    }, \"Order Total: \", value),\n    decimalScale: 2,\n    value: order.data.amount / 100,\n    displayType: \"text\",\n    thousandSeparator: true,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/robak1337/Desktop/DEV/React/amazon-clone-backup/src/Order.js"],"names":["React","moment","CheckoutProduct","Order","order","unix","data","created","format","id","basket","map","item","title","image","price","rating","value","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AAAA;;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,MAAM,CAACI,IAAP,CAAYD,KAAK,CAACE,IAAN,CAAWC,OAAvB,EAAgCC,MAAhC,CAAuC,qBAAvC,CAAJ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,KAAK,CAACK,EAAd,CADF,CAHF,wBAOGL,KAAK,CAACE,IAAN,CAAWI,MAPd,uDAOG,mBAAmBC,GAAnB,CAAwBC,IAAD,iBACtB,oBAAC,eAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACH,EADX;AAEE,IAAA,KAAK,EAAEG,IAAI,CAACC,KAFd;AAGE,IAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,IAAA,KAAK,EAAEF,IAAI,CAACG,KAJd;AAKE,IAAA,MAAM,EAAEH,IAAI,CAACI,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,eAgBE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAGC,KAAD,iBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBA,KAAlB,CADzB;AAEE,IAAA,YAAY,EAAE,CAFhB;AAGE,IAAA,KAAK,EAAEb,KAAK,CAACE,IAAN,CAAWY,MAAX,GAAoB,GAH7B;AAIE,IAAA,WAAW,EAAE,MAJf;AAKE,IAAA,iBAAiB,EAAE,IALrB;AAME,IAAA,MAAM,EAAE,GANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AA2BD;;AAED,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport \"./Order.css\";\nimport moment from \"moment\";\nimport CheckoutProduct from \"./CheckoutProduct\";\n\nfunction Order({ order }) {\n  return (\n    <div className=\"order\">\n      <h2>Order</h2>\n      <p>{moment.unix(order.data.created).format(\"Do MMMM YYYY, h:mma\")}</p>\n      <p>\n        <small>{order.id}</small>\n      </p>\n\n      {order.data.basket?.map((item) => (\n        <CheckoutProduct\n          id={item.id}\n          title={item.title}\n          image={item.image}\n          price={item.price}\n          rating={item.rating}\n        />\n      ))}\n      <CurrencyFormat\n        renderText={(value) => <h3>Order Total: {value}</h3>}\n        decimalScale={2}\n        value={order.data.amount / 100}\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"$\"}\n      />\n    </div>\n  );\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}